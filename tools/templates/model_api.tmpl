package models

import ("github.com/Juniper/contrail/pkg/common"
        "github.com/gogo/protobuf/types")

type Create{{ schema.JSONSchema.GoName }}Request struct {
    {{ schema.JSONSchema.GoName }} *{{ schema.JSONSchema.GoName }} `json:"{{ schema.Path }}"`
}

type Create{{ schema.JSONSchema.GoName }}Response struct {
    {{ schema.JSONSchema.GoName }} *{{ schema.JSONSchema.GoName }} `json:"{{ schema.Path }}"`
}

type Update{{ schema.JSONSchema.GoName }}Request struct {
    {{ schema.JSONSchema.GoName }} *{{ schema.JSONSchema.GoName }} `json:"{{ schema.Path }}"`
    FieldMask types.FieldMask `json:"field_mask,omitempty"`
}

type Update{{ schema.JSONSchema.GoName }}Response struct {
    {{ schema.JSONSchema.GoName }} *{{ schema.JSONSchema.GoName }} `json:"{{ schema.Path }}"`
}

type Delete{{ schema.JSONSchema.GoName }}Request struct {
    ID string `json:"id"`
}

type Delete{{ schema.JSONSchema.GoName }}Response struct {
    ID string `json:"id"`
}

type List{{ schema.JSONSchema.GoName }}Request struct {
    Spec *ListSpec
}

type List{{ schema.JSONSchema.GoName }}Response struct {
   {{ schema.JSONSchema.GoName }}s []*{{ schema.JSONSchema.GoName }} `json:"{{ schema.PluralPath }}"` 
}

type Get{{ schema.JSONSchema.GoName }}Request struct {
    ID string `json:"id"`
}

type Get{{ schema.JSONSchema.GoName }}Response struct {
   {{ schema.JSONSchema.GoName }} *{{ schema.JSONSchema.GoName }} `json:"{{ schema.Path }}"` 
}

func InterfaceToUpdate{{ schema.JSONSchema.GoName }}Request(i interface{}) *Update{{ schema.JSONSchema.GoName }}Request {
    //TODO implement
    return &Update{{ schema.JSONSchema.GoName }}Request{

    }
}